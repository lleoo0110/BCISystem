function preset = speech_imagery_preset()
    preset = struct(...
        'signal', struct(...
            'window', struct(...
                'analysis', 1.0, ...          % 解析窓1秒
                'stimulus', 3.0, ...          % 刺激時間3秒
                'bufferSize', 8, ...          % バッファサイズ8秒
                'updateBuffer', 0.25 ...      % 0.25秒ごとに更新
            ), ...
            'frequency', struct(...
                'min', 4, ...                 % θ波帯域の下限
                'max', 45, ...                % γ波帯域の上限
                'bands', struct(...
                    'theta', [4 8], ...       % θ波帯域
                    'alpha', [8 13], ...      % α波帯域
                    'beta',  [13 30], ...     % β波帯域
                    'gamma', [30 45] ...      % γ波帯域
                ) ...
            ), ...
            'filter', struct(...
                'notch', struct(...
                    'enabled', true, ...
                    'frequency', [50 60], ...  % 電源ノイズ除去
                    'bandwidth', 2 ...
                ), ...
                'fir', struct(...
                    'enabled', true, ...
                    'scaledPassband', true, ...
                    'filterOrder', 128, ...    % より高次のフィルタ
                    'designMethod', 'window', ...
                    'windowType', 'hamming' ...
                ) ...
            ) ...
        ), ...
        'feature', struct(...
            'power', struct(...
                'enable', true, ...
                'method', 'wavelet', ...       % ウェーブレット変換を使用
                'normalize', true, ...
                'wavelet', struct(...
                    'type', 'morl', ...       % Morletウェーブレット
                    'scaleNum', 128 ...
                ), ...
                'bands', struct(...
                    'names', {'theta', 'alpha', 'beta', 'gamma'}, ...
                    'theta', [4 8], ...
                    'alpha', [8 13], ...
                    'beta',  [13 30], ...
                    'gamma', [30 45] ...
                ) ...
            ), ...
            'csp', struct(...
                'enable', true, ...
                'patterns', 1, ...            % より多くのCSPパターン
                'regularization', 0.1 ...
            ) ...
        ), ...
        'classifier', struct(...
            'svm', struct(...
                'enable', true, ...
                'type', 'ecoc', ...
                'kernel', 'polynomial', ...    % 多項式カーネルを使用
                'optimize', true, ...
                'probability', true, ...
                'hyperparameters', struct(...
                    'optimizer', 'bayesian', ... % ベイズ最適化を使用
                    'boxConstraint', [0.1, 1, 10, 100], ...
                    'kernelScale', [0.1, 1, 10, 100] ...
                ) ...
            ) ...
        ) ...
    );
end