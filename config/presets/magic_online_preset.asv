function preset = magic_offline_preset()
    
    trigger_mappings = {
        '安静', 1;
        '炎魔法', 2;
    };

    mapping_struct = struct();
    for i = 1:size(trigger_mappings, 1)
        field_name = sprintf('trigger%d', i);
        mapping_struct.(field_name) = struct(...
            'text', trigger_mappings{i,1}, ...
            'value', trigger_mappings{i,2} ...
        );
    end
        
    preset = struct(...
        'acquisition', struct(...
            'mode', 'online', ... 
            'save', struct(...
                'name', 'test' ... 
            ) ...
        ), ...
        'udp', struct(...
            'receive', struct(...
                'triggers', struct(...      % トリガー設定
                    'mappings', mapping_struct ...     % 上で設定したマッピングが自動設定
                ) ...
            ) ...
        ), ...
        'signal', struct(...
            'window', struct(...
                'analysis', 2.0, ...          % 解析窓2秒
                'stimulus', 5.0, ...          % 刺激時間5秒
                'bufferSize', 15, ...         % バッファサイズ10秒
                'updateBuffer', 0.5 ...       % 0.5秒ごとに更新
            ), ...
            'frequency', struct(...
                'min', 8, ...                 % μ波帯域の下限
                'max', 30 ...                % β波帯域の上限
            ), ...
            'augmentation', struct(...    % データ拡張の設定
                'enabled', false, ...     % データ拡張の有効/無効
                'numAugmentations', 4, ... % 1エポックあたりの拡張数：2-8程度
                'maxShiftRatio', 0.1, ... % 最大シフト率：0-0.5の値（0.1推奨）
                'noiseLevel', 0.1 ...    % ノイズレベル：0-0.2の値（0.05推奨）
            ), ...
            'normalize', struct(...       % 正規化の設定
                'enabled', true, ...      % 正規化の有効/無効：通常はtrue
                'type', 'all', ...        % 正規化の種類：'all'（全体）or 'epoch'（エポックごと）
                'method', 'zscore' ...    % 正規化方法：'zscore'，'minmax'，'robust'から選択
            ) ...
        ), ...
        'feature', struct(...
            'power', struct(...
                'enable', false, ...
                'method', 'welch', ...         % Welch法でパワー計算
                'normalize', true, ...
                'bands', struct(...
                    'names', {{'alpha', 'beta'}} ...
                ) ...
            ), ...
            'faa', struct(...            % 前頭部アルファ非対称性の設定
                'enable', false ...       % FAA特徴量の有効/無効
            ), ...
            'erd', struct(...            % 事象関連脱同期の設定
                'enable', false ...      % ERD特徴量の有効/無効
            ), ...
            'csp', struct(...            % 共通空間パターンの設定
                'enable', true, ...     % CSP特徴量の有効/無効
                'storageType', 'array', ... % データ保存形式：'array'または'cell'
                'patterns', 4 ...       % 使用するパターン数：全チャンネル数以下
            ) ...
        ), ...
        'classifier', struct(...
            'svm', struct(...
                'enable', true, ...
                'type', 'svm' ...
            ) ...
        ) ...
    );
end